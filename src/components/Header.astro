---
import { Image } from "astro:assets";
import icon from "../assets/images/favicon.png";
import { Icon } from "astro-icon/components";
import Footer from "./Footer.astro";
import Search from "./Search.astro";

interface Props {
  style?: string;
}
const { style } = Astro.props;
---

<div id="header" data-pagefind-ignore="all">
  <header data-pagefind-ignore="all" style={style}>
    <Icon
      name="mdi:magnify"
      width="2rem"
      height="2rem"
      class="sp_only"
      desc="検索アイコン"
    />
    <a href="/" class="logo_wrapper">
      <Image
        loading="eager"
        decoding="auto"
        class="logo"
        src={icon}
        alt="航技研ロゴ"
      />
      <span class="pc_only">茨城大学航空技術研究会</span>
      <span class="sp_only">航技研</span>
    </a>
    <nav>
      <ul>
        <li><a href="/about">航技研について</a></li>
        <li><a href="/posts">投稿一覧</a></li>
        <li><a href="/contact">お問い合わせ</a></li>
        <li><a href="/social">SNS</a></li>
      </ul>
      <div id="sp_menu" data-icon="mdi:menu">
        <Icon name="mdi:menu" width="3rem" height="3rem" />
      </div>
    </nav>
    <Icon
      name="mdi:magnify"
      width="2rem"
      height="2rem"
      desc="検索アイコン"
      tabindex={0}
    />
  </header>

  {/* 検索ダイアログ */}
  <dialog id="search_dialog">
    <div class="dialog_header">
      <h1>検索</h1>
      <Icon name="mdi:close" width="3rem" height="3rem" />
    </div>
    <Search />
  </dialog>

  {/* SPメニュー */}
  <dialog id="menu_dialog">
    <div class="dialog_header">
      <h1>メニュー</h1>
      <Icon name="mdi:close" width="3rem" height="3rem" />
    </div>
    <ul>
      <li><a href="/">ホーム</a></li>
      <li><a href="/about">航技研について</a></li>
      <li><a href="/news">お知らせ</a></li>
      <li><a href="/articles">記事一覧</a></li>
      <li><a href="/contact">お問い合わせ</a></li>
      <li><a href="/social">SNS</a></li>
    </ul>
    <Footer />
  </dialog>
</div>

<style>
  header {
    inset: 0;
    height: clamp(4rem, 5vw, 5rem);
    display: flex;
    justify-content: space-around;
    align-items: center;
    padding: 0 1rem;
    color: var(--blue);
    border-bottom: 1px solid var(--sky);
    background-color: var(--white);
  }

  img.logo {
    width: clamp(3rem, 4vw, 4rem);
    height: clamp(3rem, 4vw, 4rem);
    aspect-ratio: 1/1;
  }

  a.logo_wrapper {
    display: flex;
    align-items: center;
    padding: 0.2rem;
    text-decoration: none;
    span {
      margin: 0 0.5rem;
      padding: 0;
      color: var(--blue);
      font-weight: bold;
      font-size: clamp(1.2rem, 1.6vw, 2rem);
      @media (width <= 1000px) {
        text-align: center;
      }
    }
    .pc_only {
      width: calc(clamp(1.2rem, 1.6vw, 2rem) * 11);
    }
    .sp_only {
      width: calc(clamp(1.2rem, 1.6vw, 2rem) * 3);
    }
  }

  .pc_only {
    display: block;
    @media (width <= 600px) {
      display: none;
    }
  }
  .sp_only {
    display: none;
    @media (width <= 600px) {
      display: block;
    }
  }

  nav {
    #sp_menu {
      display: none;
      @media (width <= 1000px) {
        display: flex;
      }
      [data-icon="mdi:menu"] {
        cursor: pointer;
      }
    }
    ul {
      @media (width <= 1000px) {
        display: none;
      }
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
      li {
        display: inline-block;
        margin-right: 1rem;
        transition: 0.3s ease;
        border-radius: 999px;
        a {
          text-decoration: none;
          color: var(--blue);
          padding: 0.5rem 1rem;
        }
      }
      li:hover {
        animation: link-hover 0.3s ease forwards;
      }
    }
  }
  @keyframes link-hover {
    0% {
      background-color: white;
    }
    100% {
      background-color: #18191a1a;
      backdrop-filter: blur(10px);
    }
  }

  dialog {
    width: clamp(320px, 80vw, 800px);
    height: clamp(320px, 80vh, 100vh);
    padding: 0;
    border-radius: 1rem;
    .dialog_header {
      display: flex;
      align-items: center;
      padding: 1rem;
      h1 {
        font-size: 2rem;
        color: var(--blue);
      }
    }
    [data-icon="mdi:close"] {
      margin-left: auto;
      cursor: pointer;
    }
    ul {
      list-style: none;
      padding: 0;
      margin: 0 1rem;
      overflow-y: scroll;
      li {
        margin: 1rem 0;
        a {
          text-decoration: none;
          color: var(--blue);
          font-size: 1.5rem;
        }
      }
    }
  }
  dialog[open] {
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 100%;
  }

  [data-icon="mdi:magnify"] {
    padding: 0.75rem;
    cursor: pointer;
    border-radius: 50%;
  }
  [data-icon="mdi:magnify"]:hover {
    animation: link-hover 0.3s ease forwards;
  }

  html:has(dialog[open]) {
    /* 背景のスクロール禁止 */
    overflow: hidden;
  }
</style>
<script>
  function open_dialog(dialog: HTMLDialogElement) {
    dialog.showModal();
    dialog.animate(
      [
        { transform: "scale(0.9)", opacity: 0 },
        { transform: "scale(1)", opacity: 1 },
      ],
      {
        duration: 200,
        fill: "forwards",
      },
    );
  }
  function close_dialog(dialog: HTMLDialogElement) {
    dialog
      .animate(
        [
          { transform: "scale(1)", opacity: 1 },
          { transform: "scale(0.9)", opacity: 0 },
        ],
        {
          duration: 200,
          fill: "forwards",
        },
      )
      .finished.then(() => dialog.close());
  }

  document.getElementById("sp_menu")?.addEventListener("click", () => {
    const dialog = document.querySelector<HTMLDialogElement>("#menu_dialog");
    if (!dialog) return;
    open_dialog(dialog);

    dialog?.addEventListener("click", (e) => {
      if (e.target === dialog) close_dialog(dialog);
    });
    dialog
      ?.querySelector("[data-icon='mdi:close']")
      ?.addEventListener("click", () => {
        close_dialog(dialog);
      });
  });

  document
    .querySelectorAll("header > svg[data-icon='mdi:magnify']") // 2つある (PC, SP)
    .forEach((el) => {
      const dialog =
        document.querySelector<HTMLDialogElement>("#search_dialog");
      if (!dialog) return;

      el.addEventListener("click", () => {
        open_dialog(dialog);
      });
      el.addEventListener("keydown", (e) => {
        if ((e as KeyboardEvent).key === "Enter") open_dialog(dialog);
      });

      dialog?.addEventListener("click", (e) => {
        if (e.target === dialog) close_dialog(dialog);
      });
      dialog
        ?.querySelector("[data-icon='mdi:close']")
        ?.addEventListener("click", () => {
          close_dialog(dialog);
        });
    });
</script>
